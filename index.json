[{"content":"做决定的时候，你可以做两种决定。\n一种是不可逆决定，它就像一扇单向门，你穿过了就不能回来了。\n另一种是可逆决定，就像双向门，穿过了还可以再回来。\n怎么区分它们呢？\n你可以看撤销成本。撤消成本越高，决定就越不可逆；撤销成本越低，决定就越可逆。\n这里的窍门是，可逆决定要快，不可逆决定要晚。\n当决定是可逆的，就要快速做决定。最大的风险是拖拖拉拉、犹豫不决。\n当决定是不可逆的，就要放慢速度，设法获取更多的决策信息。最大的风险是做出错误的决定。\n亚马逊的老板贝佐斯认为，不可逆决定如果有70%的把握能确定结果，就是采取行动的时候。如果不那么有把握，那就不妨再观察一下。\n总之，可逆决定的最大风险是拖到了最后一分钟，不可逆决定的最大风险是在真正需要决策的时刻来临之前就做出决定。\n","permalink":"https://skykoo.github.io/posts/how_to_make_discision/","summary":"做决定的时候，你可以做两种决定。 一种是不可逆决定，它就像一扇单向门，你穿过了就不能回来了。 另一种是可逆决定，就像双向门，穿过了还可以再回来。","title":"如何做决定？"},{"content":" 参考 Markdown 教程\n一级 二级 三级 四级 五级 正文!\n代码块\n#include \u0026lt;iostream\u0026gt; int main() { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34; \u0026lt;\u0026lt; std::endl; return 0; } ","permalink":"https://skykoo.github.io/posts/markdown/","summary":"参考 Markdown 教程 一级 二级 三级 四级 五级 正文! 代码块 #include \u0026lt;iostream\u0026gt; int main() { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34; \u0026lt;\u0026lt; std::endl; return 0; }","title":"Markdown 基本语法"}]